	1,类似过滤器，首先要有接口(如此例中的Proxy)
	     接口内必须有一个方法，使得所有实现此接口的类通过该方法都能往下调(如此例中的doProxy(ProxyChain proxyChain)方法)，并且保证在同一条链中进行
	2,类似过滤器链，再来一个链(如此例中的ProxyChain)
	     链类中需要有一个集合，集合内装着一些Proxy接口的实现类，提供一个判断是否往下调接口实现类的方法(通过集合中的对象下标判断)，调到最后一个实现类之后就
	     要执行核心业务代码。
	3,来一个类，负责将目标对象和一些加强(代理类)糅合到一起来生成具备更多功能的代理类。该生成代理类的机制用的是CGLIB机制，Enhancer来创建代理对象返回。
	  Enhancer.create(targerClass,CallBack); 这里CallBack用的到是匿名内部类new MethodInterceptor()，实现其intercept拦截方法，
	     即在创建子类对象时都会调用到父类的构造方法